<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VolumeWatcher"
        xmlns:vm="clr-namespace:VolumeWatcher.ViewModel"
        xmlns:vmc="clr-namespace:VolumeWatcher.ViewModel.Converter"
        xmlns:moral="clr-namespace:Moral"
        xmlns:UI="clr-namespace:Moral.UI"
        mc:Ignorable="d"
        x:Class="VolumeWatcher.View.WindowOption"
        Left="{Binding OptionWindow_Left, Mode=TwoWay}"
        Top="{Binding OptionWindow_Top, Mode=TwoWay}"
        SizeToContent="Height"
        ResizeMode="NoResize" 
        Icon="/VolumeWatcher;component/resources/icon-windw.ico" 
        Activated="Window_Activated"
        Closing="Window_Closing"
        Title="VolumeWatcher Options" Loaded="Window_Loaded"
        Width="340">
    <!-- xmlns:system="clr-namespace:System;assembly=mscorlib" -->
    <Window.Resources>
        <!--<system:String x:Key="AsmInfo_ProductName">Product Name</system:String>
        <system:String x:Key="AsmInfo_Version">9.9.9</system:String>-->
        <!-- バリューコンバータ -->
        <vm:WindowPositionConverter         x:Key="E2BConverter"/>
        <vmc:MMDeviceToNameConverter        x:Key="Device2NameConverter"/>
        <vmc:MMDeviceToDescriptionConverter x:Key="Device2DescriptionConverter"/>
        <vmc:MMDeviceToIconConverter        x:Key="Device2IconConverter"/>
        <vmc:MuteToBrushConverter           x:Key="Mute2BrushConverter"/>
        <vmc:BoolToNotBoolConverter         x:Key="Bool2NotBoolConverter"/>
        <moral:AssemblyInfo                 x:Key="assemblyInfo" />

        <Style x:Key="VolumePanel" TargetType="DockPanel">
            <Style.Resources>
                <Color x:Key="PanelBaseColor"      A="0" R="255" G="255" B="255" />
                <Color x:Key="PanelMouseOverColor" A="220" R="218" G="241" B="255" />
                <SolidColorBrush x:Key="PanelBaseColorBrush" Color="{StaticResource PanelBaseColor}"/>
                <SolidColorBrush x:Key="PanelMouseOverColorBrush" Color="{StaticResource PanelMouseOverColor}" />
            </Style.Resources>
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource PanelBaseColorBrush}" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--<Setter Property="Background" Value="#FFDAF1FF" />-->
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(DockPanel.Background).(SolidColorBrush.Color)" 
                                                To="{StaticResource PanelMouseOverColor}" Duration="0:0:0.1" />
                                <!--<ColorAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut" />
                                </ColorAnimation.EasingFunction>-->
                                <!--<DoubleAnimation Storyboard.TargetProperty="(DockPanel.Opacity)" To="0" Duration="0:0:0.1" />-->
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(DockPanel.Background).(SolidColorBrush.Color)" 
                                                To="{StaticResource PanelBaseColor}" Duration="0:0:0.7" />
                                <!--<DoubleAnimation Storyboard.TargetProperty="(DockPanel.Opacity)" To="0" Duration="0:0:0.1" />-->
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="MuteToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
            <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1" >
                <ContentPresenter Name="Content" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content">
                        <Setter.Value>
                            <TextBlock FontSize="18" FontFamily="Segoe UI Symbol" Text="&#x1F507;" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <TextBlock FontSize="18" FontFamily="Segoe UI Symbol" Text="&#x1F50a;" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Content">
                        <Setter.Value>
                            <TextBlock FontSize="18" FontFamily="Segoe UI Symbol" Text="🔈" />
                            <!--<Path Style="{StaticResource SpeakerVol0Icon}"/>-->
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!--
                <TextBlock FontSize="28" FontFamily="Segoe UI Symbol" Text="&#x1F507;" />
                            <TextBlock FontSize="28" FontFamily="Segoe UI Symbol" Text="🔈" />
                            <TextBlock FontSize="28" FontFamily="Segoe UI Symbol" Text="🔉" />
                            <TextBlock FontSize="28" FontFamily="Segoe UI Symbol" Text="🔊" />
                -->
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom" Background="#FFFAFAFA">
            <!-- 右側に配置 -->
            <StatusBarItem DockPanel.Dock="Right" BorderThickness="0,0,0,2" BorderBrush="#FF86FF7A" Padding="3,3,3,0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Vol:" VerticalAlignment="Center" Foreground="{Binding Foreground, ElementName=lblVolume}"/>
                    <Label Content="{Binding Volume, Mode=OneWay}"    Foreground="{Binding IsMute, Converter={StaticResource Mute2BrushConverter}, ConverterParameter=#FF000000}" MinWidth="40" HorizontalContentAlignment="Right" x:Name="lblVolume" ContentStringFormat="0\%" Padding="0"/>
                </StackPanel>
            </StatusBarItem>
            <Separator  DockPanel.Dock="Right" Background="#30808080"/>
            <StatusBarItem DockPanel.Dock="Right" BorderThickness="0,0,0,2" BorderBrush="#FFFF7AC2" Padding="3,3,3,0">
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Rec:" VerticalAlignment="Center" Foreground="{Binding Foreground, ElementName=lblRecVolume}"/>
                    <Label Content="{Binding RecVolume, Mode=OneWay}" Foreground="{Binding IsRecMute, Converter={StaticResource Mute2BrushConverter}, ConverterParameter=#FF000000}" MinWidth="40" HorizontalContentAlignment="Right"  x:Name="lblRecVolume" ContentStringFormat="0\%" Padding="0"/>
                </StackPanel>
            </StatusBarItem>
            <!-- <Separator DockPanel.Dock="Right"/> -->
            <StatusBarItem />
        </StatusBar>
        <TabControl x:Name="tabControl" DockPanel.Dock="Top" TabStripPlacement="Left" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0" SelectionChanged="tabControl_SelectionChanged" BorderThickness="1,0,0,0" BorderBrush="#FFDADADA" Background="Transparent" >
            <TabItem x:Name="tiStatus">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Path Style="{StaticResource SatusIcon}" />
                        <TextBlock Text="状態"/>
                    </StackPanel>
                </TabItem.Header>
                <DockPanel Margin="8" ScrollViewer.VerticalScrollBarVisibility="Disabled" RenderOptions.EdgeMode="Aliased" LastChildFill="False">
                    <DockPanel x:Name="VolPanel" DockPanel.Dock="Top" Style="{StaticResource VolumePanel}" Margin="0,4" MouseWheel="DockPanel_MouseWheel" ToolTip="MouseWheelで音量を調整">
                        <TextBlock DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" Width="30" Margin="4,0,0,0">Play</TextBlock>
                        <Border Margin="0" BorderThickness="1" BorderBrush="#FF00AEFF" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <Image Width="32" Height="32" Source="{Binding RenderDevice, Mode=OneWay, Converter={StaticResource Device2IconConverter}, ConverterParameter=LARGE  }" />
                        </Border>
                        <StackPanel DockPanel.Dock="Left" VerticalAlignment="Center" ClipToBounds="True" MaxWidth="118">
                            <!--<Label Content="asdfasdfasfasfkajlsfaslfkjlksjfalsjafaf" Padding="5,5,0,5" />-->
                            <Label HorizontalAlignment="Left" Padding="5,5,0,5" Content="{Binding RenderDevice, Mode=OneWay, Converter={StaticResource Device2DescriptionConverter}}"  />
                            <Label HorizontalAlignment="Left" Padding="5,5,0,5" Content="{Binding RenderDevice, Mode=OneWay, Converter={StaticResource Device2NameConverter}}" />
                        </StackPanel>
                        <DockPanel DockPanel.Dock="Right" Margin="0,4,4,4" HorizontalAlignment="Right" LastChildFill="False" >
                            <UI:LevelBar x:Name="RenderMeter"
                                            DockPanel.Dock="Right"   
                                            Height="70" Width="10" 
                                            Value="{Binding RenderPeakValue, Mode=OneWay}"
                                            HeadSize="0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" >
                                <UI:LevelBar.BarColor>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF336ED4" Offset="0.95"/>
                                        <GradientStop Color="#FF02FFC4"/>
                                    </LinearGradientBrush>
                                </UI:LevelBar.BarColor>
                            </UI:LevelBar>
                            <ToggleButton IsChecked="{Binding IsMute, Mode=TwoWay}"
                                          DockPanel.Dock="Right"
                                          Margin="4,0" VerticalAlignment="Bottom" Content="MUTE" FontSize="8" />
                            <!--<Label Content="{Binding Value, ElementName=RenderMeter, Mode=OneWay }" ContentStringFormat="{}{0}%" HorizontalAlignment="Center" MinWidth="50" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>-->
                        </DockPanel>
                    </DockPanel>
                    <Border  DockPanel.Dock="Top" BorderThickness="0,1,0,0" BorderBrush="#FFDADADA" />
                    <DockPanel x:Name="RecPanel" DockPanel.Dock="Top" Style="{StaticResource VolumePanel}" Margin="0,4" MouseWheel="DockPanel_MouseWheel"  ToolTip="MouseWheelで録音レベルを調整">
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Width="30" Margin="4,0,0,0">Rec</TextBlock>
                        <Border Margin="0" BorderThickness="1" BorderBrush="#FF00AEFF" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <Image Width="32" Height="32" Source="{Binding CaptureDevice, Mode=OneWay, Converter={StaticResource Device2IconConverter}, ConverterParameter=LARGE  }" />
                        </Border>
                        <StackPanel DockPanel.Dock="Left" VerticalAlignment="Center" ClipToBounds="True" MaxWidth="118">
                            <Label HorizontalAlignment="Left" Padding="5,5,0,5" Content="{Binding CaptureDevice, Mode=OneWay, Converter={StaticResource Device2DescriptionConverter}}" />
                            <Label HorizontalAlignment="Left" Padding="5,5,0,5" Content="{Binding CaptureDevice, Mode=OneWay, Converter={StaticResource Device2NameConverter}}" />
                        </StackPanel>
                        <DockPanel DockPanel.Dock="Right" Margin="0,4,4,4" HorizontalAlignment="Right" LastChildFill="False">
                            <UI:LevelBar x:Name="CaptureMeter"
                                            DockPanel.Dock="Right" 
                                            Height="70" Width="10" 
                                            Value="{Binding CapturePeakValue, Mode=OneWay}" 
                                            HeadSize="0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" >
                                <UI:LevelBar.BarColor>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFA20062" Offset="0.95"/>
                                        <GradientStop Color="#FFFF8DE0" Offset="0.004"/>
                                    </LinearGradientBrush>
                                </UI:LevelBar.BarColor>
                            </UI:LevelBar>
                            <ToggleButton DockPanel.Dock="Right" IsChecked="{Binding IsRecMute, Mode=TwoWay}" Margin="4,0" VerticalAlignment="Bottom" Padding="0"  Content="MUTE" FontSize="8"  />
                            <!--<Label Content="{Binding Value, ElementName=CaptureMeter, Mode=OneWay }" ContentStringFormat="{}{0}%" HorizontalAlignment="Center" MinWidth="50" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>-->
                        </DockPanel>

                    </DockPanel>
                    <ToggleButton x:Name="MicListenToggle" IsChecked="False" Content="Listen to Device" Margin="20,10,0,0" Click="ListenToDevice_Click" Height="28" VerticalAlignment="Top" HorizontalAlignment="Left" DockPanel.Dock="Top" />
                </DockPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <!--<TextBlock FontFamily="Segoe UI Symbol" Text="&#xE115;"/>-->
                        <Path Style="{StaticResource SettingIcon}" />
                        <TextBlock Text="設定"/>
                    </StackPanel>
                </TabItem.Header>
                <StackPanel Margin="8" VerticalAlignment="Top" >
                    <CheckBox x:Name="chkIsStartUp" Content="StartUpに登録する" IsChecked="false" Checked="chkIsStartUp_Checked" HorizontalAlignment="Left" />
                    <GroupBox x:Name="groupVolumeWindowPositon" Header="GroupBox"  VerticalAlignment="Top" Padding="0" Margin="0,5">
                        <Grid ShowGridLines="false" x:Name="groupVolumeWindowPositon2">
                            <Grid.RowDefinitions>
                                <!-- 行の定義 -->
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <!-- 列の定義 -->
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <RadioButton x:Name="radioLT" Content="左上" Grid.Row="0" Grid.Column="0" Margin="4,4,0,4" IsChecked="{Binding WindowPosition, ConverterParameter=LEFT_TOP, Converter={StaticResource E2BConverter}}" HorizontalAlignment="Left" />
                            <RadioButton x:Name="radioRT" Content="右上" Grid.Row="0" Grid.Column="1" Margin="4,4,0,4" IsChecked="{Binding WindowPosition, ConverterParameter=RIGHT_TOP, Converter={StaticResource E2BConverter}}" HorizontalAlignment="Left" />
                            <RadioButton x:Name="radioLB" Content="左下" Grid.Row="1" Grid.Column="0" Margin="4,4,0,4" IsChecked="{Binding WindowPosition, ConverterParameter=LEFT_BOTTOM, Converter={StaticResource E2BConverter}}" HorizontalAlignment="Left" />
                            <RadioButton x:Name="radioRB" Content="右下" Grid.Row="1" Grid.Column="1" Margin="4,4,0,4" IsChecked="{Binding WindowPosition, ConverterParameter=RIGHT_BOTTOM, Converter={StaticResource E2BConverter}}" HorizontalAlignment="Left" />
                        </Grid>
                    </GroupBox>
                    <DockPanel Margin="0,5,0,0">
                        <Label x:Name="label" Content="不透明度:" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center" Padding="0,0,5,0" Margin="4,5,0,0"/>
                        <Label x:Name="label2" Content="{Binding Value, ElementName=sliderOpacity}" ContentStringFormat="P0"  HorizontalAlignment="Right" VerticalAlignment="Top" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Padding="0" Margin="0,5,5,0" Width="40"/>
                        <Slider x:Name="sliderOpacity"  VerticalAlignment="Top" Margin="2,4,0,0" Value="{Binding Opacity, Mode=TwoWay}" Minimum="0" Maximum="1" LargeChange="0.1" IsSnapToTickEnabled="True" SmallChange="0.01" TickFrequency="0.01"/>
                    </DockPanel>
                    <GroupBox x:Name="groupBox1" Padding="0" Margin="0,8,0,0">
                        <GroupBox.Header>
                            <CheckBox x:Name="chkIsKeyHook" Content="キーボードでVolume操作を行う" IsChecked="{Binding IsKeyHook, Mode=TwoWay}" Checked="chkIsKeyHook_Changed" Unchecked="chkIsKeyHook_Changed"/>
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical" IsEnabled="{Binding IsChecked, ElementName=chkIsKeyHook}" >
                            <Label x:Name="label4" Content="[Alt]+[&lt;][&gt;] =&gt;音量+-&#xA;[Alt]+[M] =&gt; Mute&#xa;[Alt]+[K][L] =&gt;録音レベル+-&#xA;[Alt]+[J] =&gt; マイクMute"/>
                            <TextBox x:Name="txtKeyCode"  Text="-" Visibility="Collapsed"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <!--<TabItem Header="実験">
                <TextBlock FontSize="100" FontFamily="Segoe UI Symbol" Text="&#x1F507;" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path Data="M141.89453,132.22626 C140.33203,134.24449 139.12759,136.52313 138.28125,139.06219 C137.43489,141.60126 137.01172,144.10777 137.01172,146.58173 C137.01172,149.96715 137.64648,153.14098 138.91602,156.10321 C140.18555,159.06546 141.9108,161.65335 144.0918,163.86688 C146.27278,166.08043 148.84439,167.83824 151.80664,169.14032 C154.76888,170.44241 157.9427,171.09344 161.32813,171.09344 C163.86719,171.09344 166.38997,170.63773 168.89648,169.72626 C171.40298,168.8148 173.66536,167.57782 175.68359,166.01532 z M161.32813,122.36298 C158.91927,122.36298 156.62434,122.70477 154.44336,123.38837 C152.26236,124.07196 150.16275,124.99969 148.14453,126.17157 L181.73828,159.86298 C182.97525,157.77965 183.91927,155.64749 184.57031,153.46649 C185.22134,151.28551 185.54688,148.99059 185.54688,146.58173 C185.54688,143.26141 184.91211,140.13641 183.64258,137.20673 C182.37305,134.27704 180.64778,131.72171 178.4668,129.54071 C176.2858,127.35973 173.73047,125.61819 170.80078,124.3161 C167.87109,123.01402 164.71353,122.36298 161.32813,122.36298 z M161.32813,113.47626 C165.88541,113.47626 170.18228,114.33889 174.21875,116.06415 C178.2552,117.78941 181.77083,120.14944 184.76563,123.14423 C187.76041,126.13902 190.12044,129.65465 191.8457,133.6911 C193.57095,137.72757 194.43359,142.02444 194.43359,146.58173 C194.43359,151.13902 193.57095,155.4359 191.8457,159.47235 C190.12044,163.50882 187.76041,167.02444 184.76563,170.01923 C181.77083,173.01402 178.2552,175.39032 174.21875,177.14813 C170.18228,178.90594 165.88541,179.78485 161.32813,179.78485 C156.77083,179.78485 152.47395,178.90594 148.4375,177.14813 C144.40103,175.39032 140.88541,173.01402 137.89063,170.01923 C134.89583,167.02444 132.51953,163.50882 130.76172,159.47235 C129.00391,155.4359 128.125,151.13902 128.125,146.58173 C128.125,142.02444 129.00391,137.72757 130.76172,133.6911 C132.51953,129.65465 134.89583,126.13902 137.89063,123.14423 C140.88541,120.14944 144.40103,117.78941 148.4375,116.06415 C152.47395,114.33889 156.77083,113.47626 161.32813,113.47626 z M109.375,83.007507 C110.54688,83.007507 111.49088,83.528351 112.20703,84.570007 C112.92317,85.611679 113.28125,87.076523 113.28125,88.964539 L113.28125,205.95673 C113.28125,207.84474 112.9069,209.30959 112.1582,210.35126 C111.4095,211.39293 110.41666,211.91376 109.17969,211.91376 C107.8125,211.91376 106.3802,211.29527 104.88281,210.05829 L86.914063,195.99579 C84.635414,194.23798 82.421875,192.51271 80.273438,190.82001 C78.125,189.1273 76.188148,187.61363 74.462891,186.27899 C72.737625,184.94435 70.768227,183.39813 68.554688,181.64032 L30.664063,181.64032 C29.036457,181.64032 28.222656,180.85907 28.222656,179.29657 L28.222656,115.33173 C28.222656,114.61559 28.45052,114.04592 28.90625,113.62274 C29.361977,113.19957 29.947914,112.98798 30.664063,112.98798 L69.042969,112.98798 L70.703125,111.71844 C71.744789,110.87209 73.111977,109.79787 74.804688,108.49579 C76.497391,107.19371 78.417969,105.69632 80.566406,104.0036 C82.714844,102.3109 84.928383,100.58563 87.207031,98.82782 C92.480469,94.726257 98.4375,90.071312 105.07813,84.862976 C106.57552,83.626007 108.00781,83.007507 109.375,83.007507 z" Fill="Black" HorizontalAlignment="Center" Height="128.906" Margin="51.756,0,49.51,0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center" Width="166.211">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </TabItem>-->
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Path Style="{StaticResource AboutIcon}" />
                        <TextBlock Text="About"/>
                    </StackPanel>
                </TabItem.Header>
                <StackPanel Margin="8" VerticalAlignment="Top">
                    <Image x:Name="image"  Height="100" Margin="0,16"  Width="100" DockPanel.Dock="Top" VerticalAlignment="Top" Source="/VolumeWatcher;component/icon-app.ico" />
                    <TextBlock HorizontalAlignment="Center" Text="{Binding Product, Source={StaticResource assemblyInfo}}" />
                    <TextBlock HorizontalAlignment="Center" Text="{Binding ProductVersion, Source={StaticResource assemblyInfo}, StringFormat=Ver: \{0\}}"  />
                    <TextBlock HorizontalAlignment="Center" Text="{Binding BuildDateTime, Source={StaticResource assemblyInfo}, StringFormat=Build: \{0\}}"  Padding="5,10,5,0" >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Resources>
                                    <Storyboard x:Key="EnterAnimation">
                                        <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" 
                                                    To="Black" Duration="0:0:1.5" BeginTime="0:0:0.5"  FillBehavior="HoldEnd"/>
                                    </Storyboard>
                                    <Storyboard x:Key="Exitnimation">
                                        <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" 
                                                    To="Transparent" Duration="0:0:0.5" FillBehavior="Stop"/>
                                    </Storyboard>
                                </Style.Resources>
                                <Setter Property="Foreground" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!--<Setter Property="Foreground" Value="Black" />-->
                                        <Trigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource EnterAnimation}"/>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource Exitnimation}"/>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <!--<EventTrigger RoutedEvent="MouseEnter"></EventTrigger>-->
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>

                    </TextBlock>
                    <!--<TextBlock x:Name="txtVersion" TextWrapping="Wrap" HorizontalAlignment="Center" Text="{DynamicResource AsmInfo_Version}" />-->
                    <Label HorizontalAlignment="Center">
                        <Hyperlink NavigateUri="{Binding GitURL, Mode=OneWay}" RequestNavigate="Hyperlink_RequestNavigate">
                            <TextBlock Text="Go to Website."/>
                        </Hyperlink>
                    </Label>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
