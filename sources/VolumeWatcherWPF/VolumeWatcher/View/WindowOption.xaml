<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VolumeWatcher"
        xmlns:vm="clr-namespace:VolumeWatcher.ViewModel"
        xmlns:vmc="clr-namespace:VolumeWatcher.ViewModel.Converter"
        xmlns:moral="clr-namespace:Moral"
        xmlns:UI="clr-namespace:Moral.UI"
        mc:Ignorable="d"
        x:Class="VolumeWatcher.View.WindowOption"
        Left="{Binding OptionWindow_Left, Mode=TwoWay}"
        Top="{Binding OptionWindow_Top, Mode=TwoWay}"
        Width="340"
        SizeToContent="Height"
        ResizeMode="NoResize" 
        Icon="/VolumeWatcher;component/resources/icon-windw.ico" 
        Activated="Window_Activated"
        Closing="Window_Closing"
        d:DesignHeight="311.609"
        Title="VolumeWatcher Options" Loaded="Window_Loaded">
    <!-- xmlns:system="clr-namespace:System;assembly=mscorlib" -->
    <Window.Resources>
        <!--<system:String x:Key="AsmInfo_ProductName">Product Name</system:String>
        <system:String x:Key="AsmInfo_Version">9.9.9</system:String>-->
        <!-- バリューコンバータ -->
        <vm:WindowPositionConverter         x:Key="E2BConverter"/>
        <vmc:MMDeviceToNameConverter        x:Key="Device2NameConverter"/>
        <vmc:MMDeviceToDescriptionConverter x:Key="Device2DescriptionConverter"/>
        <vmc:MMDeviceToIconConverter        x:Key="Device2IconConverter"/>
        <vmc:MuteToBrushConverter           x:Key="Mute2BrushConverter"/>
        <moral:AssemblyInfo                 x:Key="assemblyInfo" />
        
        <Style x:Key="VolumePanel" TargetType="DockPanel">
            <Style.Resources>
                <Color x:Key="PanelBaseColor"      A="0" R="255" G="255" B="255" />
                <Color x:Key="PanelMouseOverColor" A="255" R="218" G="241" B="255" />
                <SolidColorBrush x:Key="PanelBaseColorBrush" Color="{StaticResource PanelBaseColor}"/>
                <SolidColorBrush x:Key="PanelMouseOverColorBrush" Color="{StaticResource PanelMouseOverColor}" />
            </Style.Resources>
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource PanelBaseColorBrush}" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--<Setter Property="Background" Value="#FFDAF1FF" />-->
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(DockPanel.Background).(SolidColorBrush.Color)" 
                                                To="{StaticResource PanelMouseOverColor}" Duration="0:0:0.1" />
                                <!--<ColorAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut" />
                                </ColorAnimation.EasingFunction>-->
                                <!--<DoubleAnimation Storyboard.TargetProperty="(DockPanel.Opacity)" To="0" Duration="0:0:0.1" />-->
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(DockPanel.Background).(SolidColorBrush.Color)" 
                                                To="{StaticResource PanelBaseColor}" Duration="0:0:0.7" />
                                <!--<DoubleAnimation Storyboard.TargetProperty="(DockPanel.Opacity)" To="0" Duration="0:0:0.1" />-->
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <StatusBar Height="25" DockPanel.Dock="Bottom">
            <!-- 右側に配置 -->
            <!--<StatusBarItem DockPanel.Dock="Right" Margin="-4,0,0,0">%</StatusBarItem>-->
            <StatusBarItem DockPanel.Dock="Right" Content="{Binding Volume, Mode=OneWay}"    Foreground="{Binding IsMute, Converter={StaticResource Mute2BrushConverter}, ConverterParameter=#FF000000}" MinWidth="40" HorizontalContentAlignment="Right" x:Name="lblVolume" ContentStringFormat="0\%" Padding="0,3,3,3"/>
            <StatusBarItem DockPanel.Dock="Right" Content="Vol:"/>
            <Separator  DockPanel.Dock="Right" Background="#30808080"/>
            <StatusBarItem DockPanel.Dock="Right" Content="{Binding RecVolume, Mode=OneWay}" Foreground="{Binding IsRecMute, Converter={StaticResource Mute2BrushConverter}, ConverterParameter=#FF000000}" MinWidth="40" HorizontalContentAlignment="Right" ContentStringFormat="0\%" Padding="0,3,3,3"/>
            <StatusBarItem DockPanel.Dock="Right" Content="Rec:"/>
            <!-- <Separator DockPanel.Dock="Right"/> -->
            <StatusBarItem />
        </StatusBar>
        <TabControl x:Name="tabControl" DockPanel.Dock="Top" TabStripPlacement="Left" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0,0,2,0" SelectionChanged="tabControl_SelectionChanged" BorderThickness="1,0,0,0" BorderBrush="#FFDADADA" Background="Transparent" >
            <TabItem Header="設定" Padding="6,2" Margin="0">
                <StackPanel Margin="10" >
                    <CheckBox x:Name="chkIsStartUp" Content="StartUpに登録する" IsChecked="false" Checked="chkIsStartUp_Checked" HorizontalAlignment="Left" />
                    <GroupBox x:Name="groupVolumeWindowPositon" Header="GroupBox"  VerticalAlignment="Top" Padding="0" Margin="0,5">
                        <Grid ShowGridLines="false" x:Name="groupVolumeWindowPositon2">
                            <Grid.RowDefinitions>
                                <!-- 行の定義 -->
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <!-- 列の定義 -->
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <RadioButton x:Name="radioLT" Content="左上" Grid.Row="0" Grid.Column="0" Margin="4,4,0,4" IsChecked="{Binding WindowPosition, ConverterParameter=LEFT_TOP, Converter={StaticResource E2BConverter}}" HorizontalAlignment="Left" />
                            <RadioButton x:Name="radioRT" Content="右上" Grid.Row="0" Grid.Column="1" Margin="4,4,0,4" IsChecked="{Binding WindowPosition, ConverterParameter=RIGHT_TOP, Converter={StaticResource E2BConverter}}" HorizontalAlignment="Left" />
                            <RadioButton x:Name="radioLB" Content="左下" Grid.Row="1" Grid.Column="0" Margin="4,4,0,4" IsChecked="{Binding WindowPosition, ConverterParameter=LEFT_BOTTOM, Converter={StaticResource E2BConverter}}" HorizontalAlignment="Left" />
                            <RadioButton x:Name="radioRB" Content="右下" Grid.Row="1" Grid.Column="1" Margin="4,4,0,4" IsChecked="{Binding WindowPosition, ConverterParameter=RIGHT_BOTTOM, Converter={StaticResource E2BConverter}}" HorizontalAlignment="Left" />
                        </Grid>
                    </GroupBox>
                    <DockPanel Margin="0,5,0,0">
                        <Label x:Name="label" Content="不透明度:" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center" Padding="0,0,5,0" Margin="4,5,0,0"/>
                        <Label x:Name="label2" Content="{Binding Value, ElementName=sliderOpacity}" ContentStringFormat="P0"  HorizontalAlignment="Right" VerticalAlignment="Top" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Padding="0" Margin="0,5,5,0" Width="40"/>
                        <Slider x:Name="sliderOpacity"  VerticalAlignment="Top" Margin="2,4,0,0" Value="{Binding Opacity, Mode=TwoWay}" Minimum="0" Maximum="1" LargeChange="0.1" IsSnapToTickEnabled="True" SmallChange="0.01" TickFrequency="0.01"/>
                    </DockPanel>
                    <GroupBox x:Name="groupBox1" VerticalAlignment="Top" Padding="0" Margin="0,8,0,0">
                        <GroupBox.Header>
                            <CheckBox x:Name="chkIsKeyHook" Content="キーボードでVolume操作を行う" IsChecked="{Binding IsKeyHook, Mode=TwoWay}" Checked="chkIsKeyHook_Changed" Unchecked="chkIsKeyHook_Changed"/>
                        </GroupBox.Header>
                        <StackPanel  Orientation="Vertical" IsEnabled="{Binding IsChecked, ElementName=chkIsKeyHook}" >
                            <Label x:Name="label4" Content="[Alt]+[&lt;][&gt;] =&gt;音量+-&#xA;[Alt]+[M] =&gt; Mute&#xa;[Alt]+[K][L] =&gt;録音レベル+-&#xA;[Alt]+[J] =&gt; マイクMute"/>
                            <TextBox x:Name="txtKeyCode"  Text="-" Visibility="Collapsed"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="状態" x:Name="tiStatus">
                <DockPanel Margin="10" ScrollViewer.VerticalScrollBarVisibility="Disabled" RenderOptions.EdgeMode="Aliased" LastChildFill="False">
                    <!--<StackPanel>-->
                    <DockPanel x:Name="VolPanel" DockPanel.Dock="Top" Style="{StaticResource VolumePanel}" Margin="0,4" MouseWheel="DockPanel_MouseWheel" ToolTip="MouseWheelで音量を調整">
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Width="30" Margin="0">Play</TextBlock>
                        <Border Margin="0" BorderThickness="1" BorderBrush="#FF00AEFF" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <Image Width="32" Height="32" Source="{Binding RenderDevice, Mode=OneWay, Converter={StaticResource Device2IconConverter}, ConverterParameter=LARGE  }" />
                        </Border>
                        <StackPanel MaxWidth="130" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <Label Content="{Binding RenderDevice, Mode=OneWay, Converter={StaticResource Device2DescriptionConverter}}" HorizontalAlignment="Left" />
                            <Label Content="{Binding RenderDevice, Mode=OneWay, Converter={StaticResource Device2NameConverter}}" HorizontalAlignment="Left" />
                        </StackPanel>
                        <DockPanel ScrollViewer.VerticalScrollBarVisibility="Disabled" LastChildFill="False" Margin="0">
                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="0,4,4,4" >
                                <ToggleButton  IsChecked="{Binding IsMute, Mode=TwoWay}" Content="MUTE" Margin="4,0" VerticalAlignment="Bottom" FontSize="8" />
                                <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                    <UI:LevelBar x:Name="RenderMeter" DockPanel.Dock="Right" Height="60" Width="8" Value="{Binding RenderPeakValue, Mode=OneWay}" HorizontalAlignment="Center" HeadSize="0" >
                                        <UI:LevelBar.BarColor>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF336ED4" Offset="0.95"/>
                                                <GradientStop Color="#FF02FFC4"/>
                                            </LinearGradientBrush>
                                        </UI:LevelBar.BarColor>
                                    </UI:LevelBar>
                                </Border>
                                <!--<Label Content="{Binding Value, ElementName=RenderMeter, Mode=OneWay }" ContentStringFormat="{}{0}%" HorizontalAlignment="Center" MinWidth="50" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>-->
                            </StackPanel>
                        </DockPanel>
                    </DockPanel>
                    <Border  DockPanel.Dock="Top" BorderThickness="0,1,0,0" BorderBrush="#FFDADADA" />
                    <DockPanel x:Name="RecPanel" DockPanel.Dock="Top" Style="{StaticResource VolumePanel}" Margin="0,4" MouseWheel="DockPanel_MouseWheel"  ToolTip="MouseWheelで録音レベルを調整">
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Width="30" Margin="0">Rec</TextBlock>
                        <Border Margin="0" BorderThickness="1" BorderBrush="#FF00AEFF" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <Image Width="32" Height="32" Source="{Binding CaptureDevice, Mode=OneWay, Converter={StaticResource Device2IconConverter}, ConverterParameter=LARGE  }" />
                        </Border>
                        <StackPanel MaxWidth="130" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <Label Content="{Binding CaptureDevice, Mode=OneWay, Converter={StaticResource Device2DescriptionConverter}}" HorizontalAlignment="Left" />
                            <Label Content="{Binding CaptureDevice, Mode=OneWay, Converter={StaticResource Device2NameConverter}}" HorizontalAlignment="Left" />
                        </StackPanel>
                        <DockPanel ScrollViewer.VerticalScrollBarVisibility="Disabled" LastChildFill="False" Margin="0">
                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="0,4,4,4" >
                                <ToggleButton  IsChecked="{Binding IsRecMute, Mode=TwoWay}" Content="MUTE" Margin="4,0" VerticalAlignment="Bottom" FontSize="8" />
                                <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                    <UI:LevelBar x:Name="CaptureMeter" DockPanel.Dock="Left" Height="60" Width="8" Value="{Binding CapturePeakValue, Mode=OneWay}" HeadSize="0" >
                                        <UI:LevelBar.BarColor>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFA20062" Offset="0.95"/>
                                                <GradientStop Color="#FFFF8DE0" Offset="0.004"/>
                                            </LinearGradientBrush>
                                        </UI:LevelBar.BarColor>
                                    </UI:LevelBar>
                                </Border>
                                <!--<Label Content="{Binding Value, ElementName=CaptureMeter, Mode=OneWay }" ContentStringFormat="{}{0}%" HorizontalAlignment="Center" MinWidth="50" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>-->
                            </StackPanel>
                        </DockPanel>
                    </DockPanel>
                    <!--</StackPanel>-->
                    <ToggleButton x:Name="MicListenToggle" IsChecked="False" Content="Listen to Device" Margin="20,10,0,0" Click="ListenToDevice_Click" Height="28" VerticalAlignment="Top" HorizontalAlignment="Left" DockPanel.Dock="Top" />
                </DockPanel>
            </TabItem>
            <TabItem Header="About">
                <StackPanel Margin="10" VerticalAlignment="Top">
                    <Image x:Name="image"  Height="100" Margin="0,16"  Width="100" DockPanel.Dock="Top" VerticalAlignment="Top" Source="/VolumeWatcher;component/icon-app.ico" />
                    <TextBlock HorizontalAlignment="Center" Text="{Binding Product, Source={StaticResource assemblyInfo}}" />
                    <TextBlock HorizontalAlignment="Center" Text="{Binding ProductVersion, Source={StaticResource assemblyInfo}, StringFormat=Ver: \{0\}}"  />
                    <TextBlock HorizontalAlignment="Center" Text="{Binding BuildDateTime, Source={StaticResource assemblyInfo}, StringFormat=Build: \{0\}}"  Padding="5,10,5,0" >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Resources>
                                    <Storyboard x:Key="EnterAnimation">
                                        <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" 
                                                    To="Black" Duration="0:0:1.5" BeginTime="0:0:0.5"  FillBehavior="HoldEnd"/>
                                    </Storyboard>
                                    <Storyboard x:Key="Exitnimation">
                                        <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" 
                                                    To="Transparent" Duration="0:0:0.5" FillBehavior="Stop"/>
                                    </Storyboard>
                                </Style.Resources>
                                <Setter Property="Foreground" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!--<Setter Property="Foreground" Value="Black" />-->
                                        <Trigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource EnterAnimation}"/>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource Exitnimation}"/>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <!--<EventTrigger RoutedEvent="MouseEnter"></EventTrigger>-->
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>

                    </TextBlock>
                    <!--<TextBlock x:Name="txtVersion" TextWrapping="Wrap" HorizontalAlignment="Center" Text="{DynamicResource AsmInfo_Version}" />-->
                    <Label HorizontalAlignment="Center">
                        <Hyperlink NavigateUri="{Binding GitURL, Mode=OneWay}" RequestNavigate="Hyperlink_RequestNavigate">
                            <TextBlock Text="Go to Website."/>
                        </Hyperlink>
                    </Label>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
