<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:VolumeWatcher.Style">
    <Style TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <Color x:Key="ToggleBaseColor"      A="0" R="240" G="248" B="255" />
            <Color x:Key="ToggleMouseOverColor" A="255" R="218" G="241" B="255" />
            <Color x:Key="ToggleCheckedColor"   A="255" R="135" G="206" B="250" />

            <SolidColorBrush x:Key="ToggleBaseColorBrush"      Color="{StaticResource ToggleBaseColor}"/>
            <SolidColorBrush x:Key="ToggleMouseOverColorBrush" Color="{StaticResource ToggleMouseOverColor}" />
            <SolidColorBrush x:Key="ToggleCheckedColorBrush"   Color="{StaticResource ToggleCheckedColor}" />
            <Storyboard x:Key="SelectedBlink">
                <ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" 
                                                    From="#FFDAF1FF" To="{StaticResource ToggleBaseColor}" Duration="0:0:0.5" FillBehavior="Stop"/>
            </Storyboard>
        </Style.Resources>
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1" >
                            <ContentPresenter Name="Content" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource ToggleBaseColorBrush}" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
        </Style.Setters>
        <Style.Triggers>
            <!--
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="{TemplateBinding Background}" />
            </Trigger>
            -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFDAF1FF" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource ToggleCheckedColorBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{StaticResource ToggleMouseOverColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--
    <ToggleButton.Template>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border Name="Border" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" BorderThickness="1,1,1,1" >
                <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameColorKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#FFDAF1FF" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ToggleButton.Template>
    -->
</ResourceDictionary>